# -*- coding: utf-8 -*-

## from openerp import models, fields, api, exceptions, tools
from openerp import models, api, exceptions, tools
## from openerp.osv import expression, fields, osv
from openerp.osv import expression, fields, osv
from openerp import _, api, fields, models, SUPERUSER_ID
from openerp import tools
from openerp.exceptions import UserError, AccessError
from openerp.exceptions import except_orm
from openerp.exceptions import  Warning
from openerp.osv.orm import except_orm
	
class Message_Custom(models.Model):
	_inherit = "mail.message"

	tipo_etiquetas = fields.Many2many('etiquetas_relacion', 'etiquetas', 'display_name', string='Tipo de Etiquetas')

	relacion = fields.Many2many('clasificar_tarea', 'name', 'display_name', string='Relacion')

	rel_id = fields.Char(related='relacion', string="IDREL")	

	## registro = fields.Many2one('project.task', string='Tareas')
	## clientes = fields.Many2one('res.partner', string='Clientes')
	## productos = fields.Many2one('product.template', string='Productos')
	## presupuesto_venta = fields.Many2one('sale.order', string='Presupuesto de Venta')
	## pedido_venta = fields.Many2one('sale.order', string='Pedido de Venta')
	## albaran_venta = fields.Many2one('stock.picking', string='Albaran de Venta')
	## factura_venta = fields.Many2one('account.invoice', string='Factura de Venta')
	## presupuesto_compra = fields.Many2one('purchase.order', string='Presupuesto de Compra')
	## pedido_compra = fields.Many2one('purchase.order', string='Pedido de Compra')
	## albaran_compra = fields.Many2one('stock.picking', string='Albaran de Compra')
	## factura_compra = fields.Many2one('account.invoice', string='Factura de Compra')
	## from_ = fields.Many2one('res.users', string='De')
	## to_ = fields.Many2many('res.partner', 'name_id', 'email', string='Para')
	## asunto = fields.Char(string='Asunto')
	## mensaje = fields.Text(string='Mensaje')
	## ref = fields.Reference([('res.partner', 'String')])

	
	@api.multi
	def _compute_registro(self):
		
		if True == False:
			self.relacion = True
			
		else:
			self.relacion = False
					 
	
	def mostrar_alerta(self, cr, uid, ids, registro):
		
		self.registro.hide = True
				 
	def ocultar_alerta(self, cr, uid, ids, registro):
		
		self.registro.hide = False
		
	def _responder_to(self):
		from_ = self.from_
		return {
				'name': self.name,
				'res_model': 'mail.message',
				'type': 'ir.actions.act_window',
				'context': {},
				'view_mode': 'form',
				'view_type': 'form',
				'view_id': self.env.ref('menupyme.responder_mail_message_action'),
				'target': 'current',
				}
			

class Task_clientes(models.Model):
	_inherit = "res.partner"
	
	tasks = fields.One2many('project.task', 'partner_id', string='Tareas')
	
class Mail_project(models.Model):
	_inherit = "project.task"
	
	mailproyecto = fields.One2many('mail.message', 'registro')
	
class Presupuesto_sale(models.Model):
	_inherit = "sale.order"
	
	presupuestoventa = fields.One2many('mail.message', 'presupuesto_venta')

class Pedido_sale(models.Model):
	_inherit = "sale.order"
	
	pedidoventa = fields.One2many('mail.message', 'pedido_venta')
	
class Factura_sale(models.Model):
	_inherit = "account.invoice"
	
	facturaventa = fields.One2many('mail.message', 'factura_venta')

class Albaran_sale(models.Model):
	_inherit = "stock.picking"
	
	albaranventa = fields.One2many('mail.message', 'albaran_venta')

class Presupuesto_purchase(models.Model):
	_inherit = "purchase.order"
	
	presupuestocompra = fields.One2many('mail.message', 'presupuesto_compra')

class Pedido_purchase(models.Model):
	_inherit = "purchase.order"
	
	pedidocompra = fields.One2many('mail.message', 'pedido_compra')
	
class Factura_purchase(models.Model):
	_inherit = "account.invoice"
	
	facturacompra = fields.One2many('mail.message', 'factura_compra')

class Albaran_purchase(models.Model):
	_inherit = "stock.picking"
	
	albarancompra = fields.One2many('mail.message', 'albaran_compra')



	

